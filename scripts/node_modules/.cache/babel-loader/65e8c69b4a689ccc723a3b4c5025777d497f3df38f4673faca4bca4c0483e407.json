{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CubeFace=_ref=>{let{faceData,label,position}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:`face-container ${position}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"face-label\",children:label}),/*#__PURE__*/_jsx(\"div\",{className:\"face\",children:[0,1,2].map(row=>[0,1,2].map(col=>/*#__PURE__*/_jsx(\"div\",{className:`square ${faceData[row][col]}`},`${row}-${col}`)))})]});};export default CubeFace;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","CubeFace","_ref","faceData","label","position","className","children","map","row","col"],"sources":["C:/New folder/rubiks-cube-simulator/scripts/src/components/CubeNet/CubeFace.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst CubeFace = ({ faceData, label, position }) => {\r\n    return (\r\n        <div className={`face-container ${position}`}>\r\n            <div className=\"face-label\">{label}</div>\r\n            <div className=\"face\">\r\n                {[0, 1, 2].map(row => (\r\n                    [0, 1, 2].map(col => (\r\n                        <div\r\n                            key={`${row}-${col}`}\r\n                            className={`square ${faceData[row][col]}`}\r\n                        />\r\n                    ))\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CubeFace;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAmC,IAAlC,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAC3C,mBACIF,KAAA,QAAKM,SAAS,CAAE,kBAAkBD,QAAQ,EAAG,CAAAE,QAAA,eACzCT,IAAA,QAAKQ,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEH,KAAK,CAAM,CAAC,cACzCN,IAAA,QAAKQ,SAAS,CAAC,MAAM,CAAAC,QAAA,CAChB,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,EACd,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAACD,GAAG,CAACE,GAAG,eACbZ,IAAA,QAEIQ,SAAS,CAAE,UAAUH,QAAQ,CAACM,GAAG,CAAC,CAACC,GAAG,CAAC,EAAG,EADrC,GAAGD,GAAG,IAAIC,GAAG,EAErB,CACJ,CACJ,CAAC,CACD,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAT,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}