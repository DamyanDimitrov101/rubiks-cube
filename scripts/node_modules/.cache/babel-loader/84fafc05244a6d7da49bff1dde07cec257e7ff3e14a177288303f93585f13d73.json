{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MainPage=()=>{const[cubeState,setCubeState]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchCubeState=async()=>{try{setLoading(true);const response=await fetch('http://localhost:8080/api/cube');if(!response.ok){throw new Error(`API request failed with status: ${response.status}`);}const data=await response.json();setCubeState(data);setError(null);}catch(err){console.error('Error fetching cube state:',err);setError(err.message);}finally{setLoading(false);}};fetchCubeState();// Optional: Set up polling to refresh data periodically\n// const intervalId = setInterval(fetchCubeState, 5000);\n// return () => clearInterval(intervalId);\n},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"main-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Rubik's Cube Simulator\"}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading cube state...\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Error:\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"p\",{children:\"Make sure your Go backend is running on port 8080\"})]}),cubeState&&!loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"cube-state\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Current Cube State\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"json-display\",children:JSON.stringify(cubeState,null,2)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"controls\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Reset Cube\"})})]});};export default MainPage;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","MainPage","cubeState","setCubeState","loading","setLoading","error","setError","fetchCubeState","response","fetch","ok","Error","status","data","json","err","console","message","className","children","JSON","stringify"],"sources":["C:/New folder/rubiks-cube-simulator/scripts/src/components/MainPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MainPage = () => {\r\n    const [cubeState, setCubeState] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchCubeState = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await fetch('http://localhost:8080/api/cube');\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`API request failed with status: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                setCubeState(data);\r\n                setError(null);\r\n            } catch (err) {\r\n                console.error('Error fetching cube state:', err);\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchCubeState();\r\n\r\n        // Optional: Set up polling to refresh data periodically\r\n        // const intervalId = setInterval(fetchCubeState, 5000);\r\n        // return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"main-page\">\r\n            <h1>Rubik's Cube Simulator</h1>\r\n\r\n            {loading && <p>Loading cube state...</p>}\r\n\r\n            {error && (\r\n                <div className=\"error-message\">\r\n                    <h3>Error:</h3>\r\n                    <p>{error}</p>\r\n                    <p>Make sure your Go backend is running on port 8080</p>\r\n                </div>\r\n            )}\r\n\r\n            {cubeState && !loading && (\r\n                <div className=\"cube-state\">\r\n                    <h2>Current Cube State</h2>\r\n                    <pre className=\"json-display\">\r\n            {JSON.stringify(cubeState, null, 2)}\r\n          </pre>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"controls\">\r\n                <button>Reset Cube</button>\r\n                {/* Additional controls can be added here */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAY,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACAH,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gCAAgC,CAAC,CAE9D,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,mCAAmCH,QAAQ,CAACI,MAAM,EAAE,CAAC,CACzE,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCZ,YAAY,CAACW,IAAI,CAAC,CAClBP,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAE,MAAOS,GAAG,CAAE,CACVC,OAAO,CAACX,KAAK,CAAC,4BAA4B,CAAEU,GAAG,CAAC,CAChDT,QAAQ,CAACS,GAAG,CAACE,OAAO,CAAC,CACzB,CAAC,OAAS,CACNb,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAEDG,cAAc,CAAC,CAAC,CAEhB;AACA;AACA;AACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIR,KAAA,QAAKmB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBtB,IAAA,OAAAsB,QAAA,CAAI,wBAAsB,CAAI,CAAC,CAE9BhB,OAAO,eAAIN,IAAA,MAAAsB,QAAA,CAAG,uBAAqB,CAAG,CAAC,CAEvCd,KAAK,eACFN,KAAA,QAAKmB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC1BtB,IAAA,OAAAsB,QAAA,CAAI,QAAM,CAAI,CAAC,cACftB,IAAA,MAAAsB,QAAA,CAAId,KAAK,CAAI,CAAC,cACdR,IAAA,MAAAsB,QAAA,CAAG,mDAAiD,CAAG,CAAC,EACvD,CACR,CAEAlB,SAAS,EAAI,CAACE,OAAO,eAClBJ,KAAA,QAAKmB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBtB,IAAA,OAAAsB,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BtB,IAAA,QAAKqB,SAAS,CAAC,cAAc,CAAAC,QAAA,CACpCC,IAAI,CAACC,SAAS,CAACpB,SAAS,CAAE,IAAI,CAAE,CAAC,CAAC,CAChC,CAAC,EACK,CACR,cAEDJ,IAAA,QAAKqB,SAAS,CAAC,UAAU,CAAAC,QAAA,cACrBtB,IAAA,WAAAsB,QAAA,CAAQ,YAAU,CAAQ,CAAC,CAE1B,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAnB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}