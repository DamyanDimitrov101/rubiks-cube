{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder\\\\rubiks-cube-simulator\\\\scripts\\\\src\\\\components\\\\MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [cubeState, setCubeState] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCubeState = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch('http://localhost:8080/api/cube');\n        if (!response.ok) {\n          throw new Error(`API request failed with status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCubeState(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching cube state:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCubeState();\n\n    // Optional: Set up polling to refresh data periodically\n    // const intervalId = setInterval(fetchCubeState, 5000);\n    // return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rubik's Cube Simulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading cube state...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Make sure your Go backend is running on port 8080\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), cubeState && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cube-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Cube State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"json-display\",\n        children: JSON.stringify(cubeState, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Reset Cube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"eycbgtEGl46F7LVgNNBW4DgUEuw=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainPage","_s","cubeState","setCubeState","loading","setLoading","error","setError","fetchCubeState","response","fetch","ok","Error","status","data","json","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/New folder/rubiks-cube-simulator/scripts/src/components/MainPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MainPage = () => {\r\n    const [cubeState, setCubeState] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchCubeState = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await fetch('http://localhost:8080/api/cube');\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`API request failed with status: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                setCubeState(data);\r\n                setError(null);\r\n            } catch (err) {\r\n                console.error('Error fetching cube state:', err);\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchCubeState();\r\n\r\n        // Optional: Set up polling to refresh data periodically\r\n        // const intervalId = setInterval(fetchCubeState, 5000);\r\n        // return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"main-page\">\r\n            <h1>Rubik's Cube Simulator</h1>\r\n\r\n            {loading && <p>Loading cube state...</p>}\r\n\r\n            {error && (\r\n                <div className=\"error-message\">\r\n                    <h3>Error:</h3>\r\n                    <p>{error}</p>\r\n                    <p>Make sure your Go backend is running on port 8080</p>\r\n                </div>\r\n            )}\r\n\r\n            {cubeState && !loading && (\r\n                <div className=\"cube-state\">\r\n                    <h2>Current Cube State</h2>\r\n                    <pre className=\"json-display\">\r\n            {JSON.stringify(cubeState, null, 2)}\r\n          </pre>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"controls\">\r\n                <button>Reset Cube</button>\r\n                {/* Additional controls can be added here */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}